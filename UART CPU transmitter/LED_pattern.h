#include <msp430.h>
#define SIZE 800
#define DELAY_FRACTION 2500 // MAX : 10000*3 , so range : 1 ~ 12 (10 -> 1 sec delay)
// Test for LED1 to LED2
int pattern[SIZE] = 
{
// Before Start
21,20,19,18,17,
16,15,14,13,12,
11,
10,9,8,7,6,
5,4,3,2,1,
0,
59,59,59,
// Turn off
//70,
// Start First scope
// ~0:05 -> first tone , need five second delay
70,70,70,70,
59,70,70,
// ~0:07-0:08 -> 
59,70,
// ~0:10 -> need 2~3 delay
70,70,
59,70,
// ~0:12 =>
0,1,4,11,3,
10,21,2,5,9,
6,8,7,
12,13,14,15,16,17,18,19,20,
-1,-2,-5,-12,-4,
-11,-22,-3,-6,-10,
-7,-9,-8,
-13,-14,-15,-16,-17,-18,-19,-20,-21,
44,45,46,47,48,49,50,51,52,53,54,
-33,-32,-31,-30,-29,-28,-27,-26,-25,-24,-23,
// Give a shock!!
60,61,66,65,62,63,64,
// repeat
0,1,4,11,3,
10,21,2,5,9,
6,8,7,
12,13,14,15,16,17,18,19,20,
-1,-2,-5,-12,-4,
-11,-22,-3,-6,-10,
-7,-9,-8,
-13,-14,-15,-16,-17,-18,-19,-20,-21,
44,45,46,47,48,49,50,51,52,53,54,
-33,-32,-31,-30,-29,-28,-27,-26,-25,-24,-23,
// Give a shock!!
60,61,66,65,62,63,64,
70,70,
61,66,64,60,65,62,63,
//Shock it all
// Light it all
55,56,
-1,-2,-5,-12,-4,
-11,-22,-3,-6,-10,
-7,-9,-8,
-13,-14,-15,-16,-17,-18,-19,-20,-21,
70,
// Show the layer
0,80,81,82,
-82,-81,-80,-1,
// ~ to here time is 1:07
// In whisper ~ using flash to support
60,61,66,65,62,63,64,
-61,-65,-62,-64,-63,-60,
66,62,61,-66,65,64,
-62,-65,63,-64,-61,-63,
62,65,66,-62,61,63,
-61,-65,64,-66,-63,-61,
66,62,61,-66,65,64,
-62,-65,63,-64,-61,-63,
62,65,66,-62,61,63,
-61,-65,64,-66,-63,-61,
66,62,61,-66,65,64,
-62,-65,63,-64,-61,-63,
62,65,66,-62,61,63,
-61,-65,64,-66,-63,-61,
66,62,61,-66,65,64,
-62,-65,63,-64,-61,-63,
// Back to LED switching
0,4,5,2,3,1,9,8,6,7,10,
11,15,16,20,19,18,21,14,13,12,
-1,-7,-2,-10,-9,-6,-8,-5,-4,-3,-11,
-13,-20,-22,-15,-16,-12,-14,-17,-18,-19,-21,
// Branch switching
60,61,62,63,64,65,
-65,-64,-63,-62,-61,-60,
60,61,62,63,64,65,
-60,-61,-62,-63,-64,-65,
60,61,62,63,64,65,
-65,-64,-63,-62,-61,-60,
60,61,62,63,64,65,
-60,-61,-62,-63,-64,-65,
// Light all up
55,56,59,
-1,-7,-2,-10,-9,-6,-8,-5,-4,-3,-11,
-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,
-13,-20,-22,-15,-16,-12,-14,-17,-18,-19,-21,
// Back to LED switching
0,4,5,2,3,1,9,8,6,7,10,
11,15,16,20,19,18,21,14,13,12,
-1,-7,-2,-10,-9,-6,-8,-5,-4,-3,-11,
-13,-20,-22,-15,-16,-12,-14,-17,-18,-19,-21,
// Branch switching
60,61,62,63,64,65,
-65,-64,-63,-62,-61,-60,
60,61,62,63,64,65,
-60,-61,-62,-63,-64,-65,
60,61,62,63,64,65,
-65,-64,-63,-62,-61,-60,
60,61,62,63,64,65,
-60,-61,-62,-63,-64,-65,
// Light all up
55,56,59,
-1,-7,-2,-10,-9,-6,-8,-5,-4,-3,-11,
-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,
-13,-20,-22,-15,-16,-12,-14,-17,-18,-19,-21,
70
};

int pattern_delay[SIZE] =
{
// Time delay : Before start
10,10,10,10,10,
10,10,10,10,10,
10,
10,10,10,10,10,
10,10,10,10,10,
12,
10,10,10,
// Turn off
//10,
// Start First scope
// ~0:05 -> 
10,10,10,5,
5,10,5,
// ~0:07-0:08 -> 
5,10,
// ~0:10 -> need 2~3 delay
5,3,
5,10,
// ~0:12
2,2,2,2,2,
2,2,2,2,2,
2,2,2,
2,2,2,2,2,2,2,2,2,
1,1,1,1,1,
1,1,1,1,1,
1,1,1,
1,1,1,1,1,1,1,1,1,
2,2,2,2,2,2,2,2,2,2,2,
1,1,1,1,1,1,1,1,1,1,1,
5,5,5,5,5,5,5,
//repeat
2,2,2,2,2,
2,2,2,2,2,
2,2,2,
2,2,2,2,2,2,2,2,2,
1,1,1,1,1,
1,1,1,1,1,
1,1,1,
1,1,1,1,1,1,1,1,1,
2,2,2,2,2,2,2,2,2,2,2,
1,1,1,1,1,1,1,1,1,1,1,
5,5,5,5,5,5,5,
5,5,
5,5,5,5,5,5,5,
// 
10,10,
2,2,2,2,2,
2,2,2,2,2,
2,2,2,
2,2,2,2,2,2,2,2,2,
5,
// layer display
7,7,7,7,
7,7,7,7,
// whisper
3,3,3,3,3,3,
3,3,3,3,3,3,
3,3,3,3,3,3,
3,3,3,3,3,3,
2,2,2,2,2,2,
2,2,2,2,2,2,
1,1,1,1,1,1,
1,1,1,1,1,1,
1,1,1,1,1,1,
1,1,1,1,1,1,
1,1,1,1,1,1,
1,1,1,1,1,1,
1,1,1,1,1,1,
1,1,1,1,1,1,
1,1,1,1,1,1,
1,1,1,1,1,1,
// Back to switching LED
1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,
// Switching Branch
1,1,1,1,1,1,
1,1,1,1,1,1,
1,1,1,1,1,1,
1,1,1,1,1,1,
// Light it all up
5,5,5,
1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,

// Back to switching LED
1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,
// Switching Branch
1,1,1,1,1,1,
1,1,1,1,1,1,
1,1,1,1,1,1,
1,1,1,1,1,1,
// Light it all up
5,5,5,
1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,
10
};